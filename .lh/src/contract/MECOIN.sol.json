{
    "sourceFile": "src/contract/MECOIN.sol",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1733239444622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733239449887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+// SPDX-License-Identifier: MIT\r\n+pragma solidity ^0.8.28;\r\n+\r\n+abstract contract IERC20 {\r\n+    // Events ตามมาตรฐาน ERC-20\r\n+    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n+    event Approval(\r\n+        address indexed _owner,\r\n+        address indexed _spender,\r\n+        uint256 _value\r\n+    );\r\n+\r\n+    // ฟังก์ชัน ERC-20 มาตรฐาน\r\n+    function name() external view virtual returns (string memory);\r\n+    function symbol() external view virtual returns (string memory);\r\n+    function decimals() public view virtual returns (uint8);\r\n+    function totalSupply() public view virtual returns (uint256);\r\n+    function balanceOf(address account) public view virtual returns (uint256);\r\n+\r\n+    function transfer(\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function approve(\r\n+        address spender,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function transferFrom(\r\n+        address sender,\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function allowance(\r\n+        address owner,\r\n+        address spender\r\n+    ) public view virtual returns (uint256);\r\n+}\r\n+\r\n+abstract contract ERC20 is IERC20 {\r\n+    string _name;\r\n+    string _symbol;\r\n+    uint256 _totalSupply;\r\n+    mapping(address => uint256) _balance;\r\n+\r\n+    constructor(string memory name_, string memory symbol_) {\r\n+        _name = name_;\r\n+        _symbol = symbol_;\r\n+    }\r\n+\r\n+    function name() public view override returns (string memory) {\r\n+        return _name;\r\n+    }\r\n+\r\n+    function symbol() external view override returns (string memory) {\r\n+        return _symbol;\r\n+    }\r\n+    function decimals() public view override returns (uint8) {\r\n+        return 18;\r\n+    }\r\n+    function totalSupply() public view override returns (uint256) {\r\n+        return _totalSupply;\r\n+    }\r\n+    function balanceOf(address owner) public view override returns (uint256) {\r\n+        return _balance[owner];\r\n+    }\r\n+\r\n+    // == private function == //\r\n+    function transfer(\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public override returns (bool) {}\r\n+    function approve(\r\n+        address spender,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function transferFrom(\r\n+        address sender,\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function allowance(\r\n+        address owner,\r\n+        address spender\r\n+    ) public view virtual returns (uint256);\r\n+}\r\n"
                },
                {
                    "date": 1733239477402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+// SPDX-License-Identifier: MIT\r\n+pragma solidity ^0.8.28;\r\n+\r\n+abstract contract IERC20 {\r\n+    // Events ตามมาตรฐาน ERC-20\r\n+    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n+    event Approval(\r\n+        address indexed _owner,\r\n+        address indexed _spender,\r\n+        uint256 _value\r\n+    );\r\n+\r\n+    // ฟังก์ชัน ERC-20 มาตรฐาน\r\n+    function name() external view virtual returns (string memory);\r\n+    function symbol() external view virtual returns (string memory);\r\n+    function decimals() public view virtual returns (uint8);\r\n+    function totalSupply() public view virtual returns (uint256);\r\n+    function balanceOf(address account) public view virtual returns (uint256);\r\n+\r\n+    function transfer(\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function approve(\r\n+        address spender,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function transferFrom(\r\n+        address sender,\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function allowance(\r\n+        address owner,\r\n+        address spender\r\n+    ) public view virtual returns (uint256);\r\n+}\r\n+\r\n+abstract contract ERC20 is IERC20 {\r\n+    string _name;\r\n+    string _symbol;\r\n+    uint256 _totalSupply;\r\n+    mapping(address => uint256) _balance;\r\n+\r\n+    constructor(string memory name_, string memory symbol_) {\r\n+        _name = name_;\r\n+        _symbol = symbol_;\r\n+    }\r\n+\r\n+    function name() public view override returns (string memory) {\r\n+        return _name;\r\n+    }\r\n+\r\n+    function symbol() external view override returns (string memory) {\r\n+        return _symbol;\r\n+    }\r\n+    function decimals() public view override returns (uint8) {\r\n+        return 18;\r\n+    }\r\n+    function totalSupply() public view override returns (uint256) {\r\n+        return _totalSupply;\r\n+    }\r\n+    function balanceOf(address owner) public view override returns (uint256) {\r\n+        return _balance[owner];\r\n+    }\r\n+\r\n+    // == private function == //\r\n+    function transfer(\r\n+        address from,\r\n+        uint256 amount\r\n+    ) public override returns (bool) {\r\n+\r\n+\r\n+    }\r\n+    function approve(\r\n+        address spender,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function transferFrom(\r\n+        address sender,\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function allowance(\r\n+        address owner,\r\n+        address spender\r\n+    ) public view virtual returns (uint256);\r\n+}\r\n"
                },
                {
                    "date": 1733239483974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+// SPDX-License-Identifier: MIT\r\n+pragma solidity ^0.8.28;\r\n+\r\n+abstract contract IERC20 {\r\n+    // Events ตามมาตรฐาน ERC-20\r\n+    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n+    event Approval(\r\n+        address indexed _owner,\r\n+        address indexed _spender,\r\n+        uint256 _value\r\n+    );\r\n+\r\n+    // ฟังก์ชัน ERC-20 มาตรฐาน\r\n+    function name() external view virtual returns (string memory);\r\n+    function symbol() external view virtual returns (string memory);\r\n+    function decimals() public view virtual returns (uint8);\r\n+    function totalSupply() public view virtual returns (uint256);\r\n+    function balanceOf(address account) public view virtual returns (uint256);\r\n+\r\n+    function transfer(\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function approve(\r\n+        address spender,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function transferFrom(\r\n+        address sender,\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function allowance(\r\n+        address owner,\r\n+        address spender\r\n+    ) public view virtual returns (uint256);\r\n+}\r\n+\r\n+abstract contract ERC20 is IERC20 {\r\n+    string _name;\r\n+    string _symbol;\r\n+    uint256 _totalSupply;\r\n+    mapping(address => uint256) _balance;\r\n+\r\n+    constructor(string memory name_, string memory symbol_) {\r\n+        _name = name_;\r\n+        _symbol = symbol_;\r\n+    }\r\n+\r\n+    function name() public view override returns (string memory) {\r\n+        return _name;\r\n+    }\r\n+\r\n+    function symbol() external view override returns (string memory) {\r\n+        return _symbol;\r\n+    }\r\n+    function decimals() public view override returns (uint8) {\r\n+        return 18;\r\n+    }\r\n+    function totalSupply() public view override returns (uint256) {\r\n+        return _totalSupply;\r\n+    }\r\n+    function balanceOf(address owner) public view override returns (uint256) {\r\n+        return _balance[owner];\r\n+    }\r\n+\r\n+    // == private function == //\r\n+    function _transfer(\r\n+        address from,\r\n+        uint256 amount\r\n+    ) public override returns (bool) {\r\n+\r\n+\r\n+    }\r\n+    function approve(\r\n+        address spender,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function transferFrom(\r\n+        address sender,\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function allowance(\r\n+        address owner,\r\n+        address spender\r\n+    ) public view virtual returns (uint256);\r\n+}\r\n"
                },
                {
                    "date": 1733239490810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+// SPDX-License-Identifier: MIT\r\n+pragma solidity ^0.8.28;\r\n+\r\n+abstract contract IERC20 {\r\n+    // Events ตามมาตรฐาน ERC-20\r\n+    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n+    event Approval(\r\n+        address indexed _owner,\r\n+        address indexed _spender,\r\n+        uint256 _value\r\n+    );\r\n+\r\n+    // ฟังก์ชัน ERC-20 มาตรฐาน\r\n+    function name() external view virtual returns (string memory);\r\n+    function symbol() external view virtual returns (string memory);\r\n+    function decimals() public view virtual returns (uint8);\r\n+    function totalSupply() public view virtual returns (uint256);\r\n+    function balanceOf(address account) public view virtual returns (uint256);\r\n+\r\n+    function transfer(\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function approve(\r\n+        address spender,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function transferFrom(\r\n+        address sender,\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function allowance(\r\n+        address owner,\r\n+        address spender\r\n+    ) public view virtual returns (uint256);\r\n+}\r\n+\r\n+abstract contract ERC20 is IERC20 {\r\n+    string _name;\r\n+    string _symbol;\r\n+    uint256 _totalSupply;\r\n+    mapping(address => uint256) _balance;\r\n+\r\n+    constructor(string memory name_, string memory symbol_) {\r\n+        _name = name_;\r\n+        _symbol = symbol_;\r\n+    }\r\n+\r\n+    function name() public view override returns (string memory) {\r\n+        return _name;\r\n+    }\r\n+\r\n+    function symbol() external view override returns (string memory) {\r\n+        return _symbol;\r\n+    }\r\n+    function decimals() public view override returns (uint8) {\r\n+        return 18;\r\n+    }\r\n+    function totalSupply() public view override returns (uint256) {\r\n+        return _totalSupply;\r\n+    }\r\n+    function balanceOf(address owner) public view override returns (uint256) {\r\n+        return _balance[owner];\r\n+    }\r\n+\r\n+    // == private function == //\r\n+    function _transfer(\r\n+        address from,\r\n+        address to,\r\n+        uint256 amount\r\n+    ) public override returns (bool) {\r\n+\r\n+\r\n+    }\r\n+    function approve(\r\n+        address spender,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function transferFrom(\r\n+        address sender,\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function allowance(\r\n+        address owner,\r\n+        address spender\r\n+    ) public view virtual returns (uint256);\r\n+}\r\n"
                },
                {
                    "date": 1733239503174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n     function _transfer(\r\n         address from,\r\n         address to,\r\n         uint256 amount\r\n-    ) public override returns (bool) {\r\n+    ) internal returns (bool) {\r\n \r\n \r\n     }\r\n     function approve(\r\n"
                },
                {
                    "date": 1733239669411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+// SPDX-License-Identifier: MIT\r\n+pragma solidity ^0.8.28;\r\n+\r\n+abstract contract IERC20 {\r\n+    // Events ตามมาตรฐาน ERC-20\r\n+    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n+    event Approval(\r\n+        address indexed _owner,\r\n+        address indexed _spender,\r\n+        uint256 _value\r\n+    );\r\n+\r\n+    // ฟังก์ชัน ERC-20 มาตรฐาน\r\n+    function name() external view virtual returns (string memory);\r\n+    function symbol() external view virtual returns (string memory);\r\n+    function decimals() public view virtual returns (uint8);\r\n+    function totalSupply() public view virtual returns (uint256);\r\n+    function balanceOf(address account) public view virtual returns (uint256);\r\n+\r\n+    function transfer(\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function approve(\r\n+        address spender,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function transferFrom(\r\n+        address sender,\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function allowance(\r\n+        address owner,\r\n+        address spender\r\n+    ) public view virtual returns (uint256);\r\n+}\r\n+\r\n+abstract contract ERC20 is IERC20 {\r\n+    string _name;\r\n+    string _symbol;\r\n+    uint256 _totalSupply;\r\n+    mapping(address => uint256) _balance;\r\n+\r\n+    constructor(string memory name_, string memory symbol_) {\r\n+        _name = name_;\r\n+        _symbol = symbol_;\r\n+    }\r\n+\r\n+    function name() public view override returns (string memory) {\r\n+        return _name;\r\n+    }\r\n+\r\n+    function symbol() external view override returns (string memory) {\r\n+        return _symbol;\r\n+    }\r\n+    function decimals() public view override returns (uint8) {\r\n+        return 18;\r\n+    }\r\n+    function totalSupply() public view override returns (uint256) {\r\n+        return _totalSupply;\r\n+    }\r\n+    function balanceOf(address owner) public view override returns (uint256) {\r\n+        return _balance[owner];\r\n+    }\r\n+\r\n+    // == private function == //\r\n+    function _transfer(\r\n+        address from,\r\n+        address to,\r\n+        uint256 amount\r\n+    ) internal returns (bool) {\r\n+        _b\r\n+\r\n+    }\r\n+    function approve(\r\n+        address spender,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function transferFrom(\r\n+        address sender,\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function allowance(\r\n+        address owner,\r\n+        address spender\r\n+    ) public view virtual returns (uint256);\r\n+}\r\n"
                },
                {
                    "date": 1733239675669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         address from,\r\n         address to,\r\n         uint256 amount\r\n     ) internal returns (bool) {\r\n-        _balance\r\n+        _balance[from]\r\n \r\n     }\r\n     function approve(\r\n         address spender,\r\n"
                },
                {
                    "date": 1733239681366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+// SPDX-License-Identifier: MIT\r\n+pragma solidity ^0.8.28;\r\n+\r\n+abstract contract IERC20 {\r\n+    // Events ตามมาตรฐาน ERC-20\r\n+    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n+    event Approval(\r\n+        address indexed _owner,\r\n+        address indexed _spender,\r\n+        uint256 _value\r\n+    );\r\n+\r\n+    // ฟังก์ชัน ERC-20 มาตรฐาน\r\n+    function name() external view virtual returns (string memory);\r\n+    function symbol() external view virtual returns (string memory);\r\n+    function decimals() public view virtual returns (uint8);\r\n+    function totalSupply() public view virtual returns (uint256);\r\n+    function balanceOf(address account) public view virtual returns (uint256);\r\n+\r\n+    function transfer(\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function approve(\r\n+        address spender,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function transferFrom(\r\n+        address sender,\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function allowance(\r\n+        address owner,\r\n+        address spender\r\n+    ) public view virtual returns (uint256);\r\n+}\r\n+\r\n+abstract contract ERC20 is IERC20 {\r\n+    string _name;\r\n+    string _symbol;\r\n+    uint256 _totalSupply;\r\n+    mapping(address => uint256) _balance;\r\n+\r\n+    constructor(string memory name_, string memory symbol_) {\r\n+        _name = name_;\r\n+        _symbol = symbol_;\r\n+    }\r\n+\r\n+    function name() public view override returns (string memory) {\r\n+        return _name;\r\n+    }\r\n+\r\n+    function symbol() external view override returns (string memory) {\r\n+        return _symbol;\r\n+    }\r\n+    function decimals() public view override returns (uint8) {\r\n+        return 18;\r\n+    }\r\n+    function totalSupply() public view override returns (uint256) {\r\n+        return _totalSupply;\r\n+    }\r\n+    function balanceOf(address owner) public view override returns (uint256) {\r\n+        return _balance[owner];\r\n+    }\r\n+\r\n+    // == private function == //\r\n+    function _transfer(\r\n+        address from,\r\n+        address to,\r\n+        uint256 amount\r\n+    ) internal returns (bool) {\r\n+        _balance[from] -= amount\r\n+\r\n+    }\r\n+    function approve(\r\n+        address spender,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function transferFrom(\r\n+        address sender,\r\n+        address recipient,\r\n+        uint256 amount\r\n+    ) public virtual returns (bool);\r\n+    function allowance(\r\n+        address owner,\r\n+        address spender\r\n+    ) public view virtual returns (uint256);\r\n+}\r\n"
                }
            ],
            "date": 1733239444622,
            "name": "Commit-0",
            "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nabstract contract IERC20 {\r\n    // Events ตามมาตรฐาน ERC-20\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(\r\n        address indexed _owner,\r\n        address indexed _spender,\r\n        uint256 _value\r\n    );\r\n\r\n    // ฟังก์ชัน ERC-20 มาตรฐาน\r\n    function name() external view virtual returns (string memory);\r\n    function symbol() external view virtual returns (string memory);\r\n    function decimals() public view virtual returns (uint8);\r\n    function totalSupply() public view virtual returns (uint256);\r\n    function balanceOf(address account) public view virtual returns (uint256);\r\n\r\n    function transfer(\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual returns (bool);\r\n    function approve(\r\n        address spender,\r\n        uint256 amount\r\n    ) public virtual returns (bool);\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual returns (bool);\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) public view virtual returns (uint256);\r\n}\r\n\r\nabstract contract ERC20 is IERC20 {\r\n    string _name;\r\n    string _symbol;\r\n    uint256 _totalSupply;\r\n    mapping(address => uint256) _balance;\r\n\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    function name() public view override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() external view override returns (string memory){\r\n        return _symbol;\r\n    }\r\n    function decimals() public view override returns (uint8){\r\n        return 18;\r\n    }\r\n    function totalSupply() public view override returns (uint256){\r\n        return _totalSupply ;\r\n    }\r\n    function balanceOf(address owner) public view override returns (uint256){\r\n        return _balance[owner];\r\n    }\r\n\r\n\r\n    // == private function == //\r\n    function transfer(\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual returns (bool){\r\n        \r\n    }\r\n    function approve(\r\n        address spender,\r\n        uint256 amount\r\n    ) public virtual returns (bool);\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual returns (bool);\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) public view virtual returns (uint256);\r\n}\r\n"
        }
    ]
}