{
    "sourceFile": "src/test_depositMOO.rs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1733311385830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733311427658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n // // use dotenv::dotenv;\r\n \r\n abigen!(\r\n     SwapPool,\r\n-    \"./src/abi/SwapPool.json\" // Path to the ABI file\r\n+    \"./src/\" // Path to the ABI file\r\n );\r\n \r\n #[tokio::main]\r\n async fn main() -> eyre::Result<()> {\r\n"
                },
                {
                    "date": 1733311440357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n // // use dotenv::dotenv;\r\n \r\n abigen!(\r\n     SwapPool,\r\n-    \"./src/\" // Path to the ABI file\r\n+    \"./src/build/src_contract_\" // Path to the ABI file\r\n );\r\n \r\n #[tokio::main]\r\n async fn main() -> eyre::Result<()> {\r\n"
                },
                {
                    "date": 1733311447078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n // // use dotenv::dotenv;\r\n \r\n abigen!(\r\n     SwapPool,\r\n-    \"./src/build/src_contract_\" // Path to the ABI file\r\n+    \"./src/build/src_contract_ERC20_sol_\" // Path to the ABI file\r\n );\r\n \r\n #[tokio::main]\r\n async fn main() -> eyre::Result<()> {\r\n"
                },
                {
                    "date": 1733311453390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n // // use dotenv::dotenv;\r\n \r\n abigen!(\r\n     SwapPool,\r\n-    \"./src/build/src_contract_ERC20_sol_\" // Path to the ABI file\r\n+    \"./src/build/src_contract_ERC20_sol_MooCoin\" // Path to the ABI file\r\n );\r\n \r\n #[tokio::main]\r\n async fn main() -> eyre::Result<()> {\r\n"
                },
                {
                    "date": 1733311462092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,18 +3,18 @@\n use std::sync::Arc;\r\n // // use dotenv::dotenv;\r\n \r\n abigen!(\r\n-    SwapPool,\r\n-    \"./src/build/src_contract_ERC20_sol_MooCoin\" // Path to the ABI file\r\n+    MOO,\r\n+    \"./src/build/src_contract_ERC20_sol_MooCoin.abi\" // Path to the ABI file\r\n );\r\n \r\n #[tokio::main]\r\n async fn main() -> eyre::Result<()> {\r\n-\r\n     // Set up the provider and wallet\r\n     let provider = Provider::<Http>::try_from(\"http://127.0.0.1:8545\")?;\r\n-    let wallet: LocalWallet = \"0x370b655fbd7677d37190504eb3231a976adf2bc6e229b7b8fdf8d2339bf0bd63\".parse()?;\r\n+    let wallet: LocalWallet =\r\n+        \"0x370b655fbd7677d37190504eb3231a976adf2bc6e229b7b8fdf8d2339bf0bd63\".parse()?;\r\n     let chain_id = 1337u64; // Set to your local test network's chain ID (e.g., 1337 for Ganache)\r\n     let wallet = wallet.with_chain_id(chain_id);\r\n     let client = Arc::new(SignerMiddleware::new(provider, wallet));\r\n \r\n@@ -23,33 +23,23 @@\n     let swap_pool = SwapPool::new(contract_address, client.clone());\r\n \r\n     // 1. Deposit ETH\r\n     let deposit_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n-    let binding = swap_pool\r\n-        .deposit()\r\n-        .value(deposit_amount);\r\n-    let tx = binding\r\n-        .send()\r\n-        .await?;\r\n+    let binding = swap_pool.deposit().value(deposit_amount);\r\n+    let tx = binding.send().await?;\r\n     println!(\"Deposit transaction hash: {:?}\", tx.tx_hash());\r\n \r\n     // 2. Swap balances\r\n     let recipient: Address = \"0x83b0b2Db521f68217D3A4ee04e3492c8D9cA239A\".parse()?;\r\n     let swap_amount = U256::from(500_000_000_000_000_000u64); // 0.5 ETH in Wei\r\n-    let binding = swap_pool\r\n-        .swap(recipient, swap_amount);\r\n-    let tx = binding\r\n-        .send()\r\n-        .await?;\r\n+    let binding = swap_pool.swap(recipient, swap_amount);\r\n+    let tx = binding.send().await?;\r\n     println!(\"Swap transaction hash: {:?}\", tx.tx_hash());\r\n \r\n     // 3. Withdraw ETH\r\n     let withdraw_amount = U256::from(500_000_000_000_000_000u64); // 0.5 ETH in Wei\r\n-    let binding = swap_pool\r\n-        .withdraw(withdraw_amount);\r\n-    let tx = binding\r\n-        .send()\r\n-        .await?;\r\n+    let binding = swap_pool.withdraw(withdraw_amount);\r\n+    let tx = binding.send().await?;\r\n     println!(\"Withdraw transaction hash: {:?}\", tx.tx_hash());\r\n \r\n     Ok(())\r\n }\r\n"
                },
                {
                    "date": 1733311469981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,10 @@\n use std::convert::TryFrom;\r\n use std::sync::Arc;\r\n // // use dotenv::dotenv;\r\n \r\n-abigen!(\r\n-    MOO,\r\n-    \"./src/build/src_contract_ERC20_sol_MooCoin.abi\" // Path to the ABI file\r\n-);\r\n \r\n+\r\n #[tokio::main]\r\n async fn main() -> eyre::Result<()> {\r\n     // Set up the provider and wallet\r\n     let provider = Provider::<Http>::try_from(\"http://127.0.0.1:8545\")?;\r\n"
                },
                {
                    "date": 1733311475302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,13 @@\n \r\n \r\n #[tokio::main]\r\n async fn main() -> eyre::Result<()> {\r\n+\r\n+    abigen!(\r\n+        MOOCOIN,\r\n+        \"./src/build/src_contract_ERC20_sol_MooCoin.abi\" // Path to the ABI file\r\n+    );\r\n     // Set up the provider and wallet\r\n     let provider = Provider::<Http>::try_from(\"http://127.0.0.1:8545\")?;\r\n     let wallet: LocalWallet =\r\n         \"0x370b655fbd7677d37190504eb3231a976adf2bc6e229b7b8fdf8d2339bf0bd63\".parse()?;\r\n"
                },
                {
                    "date": 1733311527865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,27 +21,16 @@\n     let client = Arc::new(SignerMiddleware::new(provider, wallet));\r\n \r\n     // Address of the deployed SwapPool contract\r\n     let contract_address: Address = \"0x2afd9dbb6363f0fdf44b43c28f38ef5e42a556eb\".parse()?;\r\n-    let swap_pool = SwapPool::new(contract_address, client.clone());\r\n+    let swap_pool = MOOCOIN::new(contract_address, client.clone());\r\n \r\n     // 1. Deposit ETH\r\n     let deposit_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n     let binding = swap_pool.deposit().value(deposit_amount);\r\n     let tx = binding.send().await?;\r\n     println!(\"Deposit transaction hash: {:?}\", tx.tx_hash());\r\n \r\n-    // 2. Swap balances\r\n-    let recipient: Address = \"0x83b0b2Db521f68217D3A4ee04e3492c8D9cA239A\".parse()?;\r\n-    let swap_amount = U256::from(500_000_000_000_000_000u64); // 0.5 ETH in Wei\r\n-    let binding = swap_pool.swap(recipient, swap_amount);\r\n-    let tx = binding.send().await?;\r\n-    println!(\"Swap transaction hash: {:?}\", tx.tx_hash());\r\n \r\n-    // 3. Withdraw ETH\r\n-    let withdraw_amount = U256::from(500_000_000_000_000_000u64); // 0.5 ETH in Wei\r\n-    let binding = swap_pool.withdraw(withdraw_amount);\r\n-    let tx = binding.send().await?;\r\n-    println!(\"Withdraw transaction hash: {:?}\", tx.tx_hash());\r\n \r\n     Ok(())\r\n }\r\n"
                },
                {
                    "date": 1733311537244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     let contract_address: Address = \"0x2afd9dbb6363f0fdf44b43c28f38ef5e42a556eb\".parse()?;\r\n     let swap_pool = MOOCOIN::new(contract_address, client.clone());\r\n \r\n     // 1. Deposit ETH\r\n-    let deposit_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n+    let mint_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n     let binding = swap_pool.deposit().value(deposit_amount);\r\n     let tx = binding.send().await?;\r\n     println!(\"Deposit transaction hash: {:?}\", tx.tx_hash());\r\n \r\n"
                },
                {
                    "date": 1733311545321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     let client = Arc::new(SignerMiddleware::new(provider, wallet));\r\n \r\n     // Address of the deployed SwapPool contract\r\n     let contract_address: Address = \"0x2afd9dbb6363f0fdf44b43c28f38ef5e42a556eb\".parse()?;\r\n-    let swap_pool = MOOCOIN::new(contract_address, client.clone());\r\n+    let moocoi = MOOCOIN::new(contract_address, client.clone());\r\n \r\n     // 1. Deposit ETH\r\n     let mint_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n     let binding = swap_pool.deposit().value(deposit_amount);\r\n"
                },
                {
                    "date": 1733311566321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,13 +21,13 @@\n     let client = Arc::new(SignerMiddleware::new(provider, wallet));\r\n \r\n     // Address of the deployed SwapPool contract\r\n     let contract_address: Address = \"0x2afd9dbb6363f0fdf44b43c28f38ef5e42a556eb\".parse()?;\r\n-    let moocoi = MOOCOIN::new(contract_address, client.clone());\r\n+    let moocoin = MOOCOIN::new(contract_address, client.clone());\r\n \r\n     // 1. Deposit ETH\r\n     let mint_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n-    let binding = swap_pool.deposit().value(deposit_amount);\r\n+    let binding = moocoin.deposit().value();\r\n     let tx = binding.send().await?;\r\n     println!(\"Deposit transaction hash: {:?}\", tx.tx_hash());\r\n \r\n \r\n"
                },
                {
                    "date": 1733311573220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     let moocoin = MOOCOIN::new(contract_address, client.clone());\r\n \r\n     // 1. Deposit ETH\r\n     let mint_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n-    let binding = moocoin.deposit().value();\r\n+    let binding = moocoin.m.value();\r\n     let tx = binding.send().await?;\r\n     println!(\"Deposit transaction hash: {:?}\", tx.tx_hash());\r\n \r\n \r\n"
                },
                {
                    "date": 1733311579747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     let moocoin = MOOCOIN::new(contract_address, client.clone());\r\n \r\n     // 1. Deposit ETH\r\n     let mint_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n-    let binding = moocoin.m.value();\r\n+    let binding = moocoin..value();\r\n     let tx = binding.send().await?;\r\n     println!(\"Deposit transaction hash: {:?}\", tx.tx_hash());\r\n \r\n \r\n"
                },
                {
                    "date": 1733311585960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     let moocoin = MOOCOIN::new(contract_address, client.clone());\r\n \r\n     // 1. Deposit ETH\r\n     let mint_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n-    let binding = moocoin..value();\r\n+    let binding = moocoin\r\n     let tx = binding.send().await?;\r\n     println!(\"Deposit transaction hash: {:?}\", tx.tx_hash());\r\n \r\n \r\n"
                },
                {
                    "date": 1733311636503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     let moocoin = MOOCOIN::new(contract_address, client.clone());\r\n \r\n     // 1. Deposit ETH\r\n     let mint_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n-    let binding = moocoin\r\n+    let binding = moocoin.deposit();\r\n     let tx = binding.send().await?;\r\n     println!(\"Deposit transaction hash: {:?}\", tx.tx_hash());\r\n \r\n \r\n"
                },
                {
                    "date": 1733311642393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     let moocoin = MOOCOIN::new(contract_address, client.clone());\r\n \r\n     // 1. Deposit ETH\r\n     let mint_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n-    let binding = moocoin.deposit();\r\n+    let binding = moocoin.deposit().value();\r\n     let tx = binding.send().await?;\r\n     println!(\"Deposit transaction hash: {:?}\", tx.tx_hash());\r\n \r\n \r\n"
                },
                {
                    "date": 1733311648537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     let moocoin = MOOCOIN::new(contract_address, client.clone());\r\n \r\n     // 1. Deposit ETH\r\n     let mint_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n-    let binding = moocoin.deposit().value();\r\n+    let binding = moocoin.deposit().value(mint_amount);\r\n     let tx = binding.send().await?;\r\n     println!(\"Deposit transaction hash: {:?}\", tx.tx_hash());\r\n \r\n \r\n"
                },
                {
                    "date": 1733315015024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     let wallet = wallet.with_chain_id(chain_id);\r\n     let client = Arc::new(SignerMiddleware::new(provider, wallet));\r\n \r\n     // Address of the deployed SwapPool contract\r\n-    let contract_address: Address = \"0x2afd9dbb6363f0fdf44b43c28f38ef5e42a556eb\".parse()?;\r\n+    let contract_address: Address = \"0x7ac7d8344c7efc596aaebefd3047bb05bf5f73892374cee07492885fe6f02673\".parse()?;\r\n     let moocoin = MOOCOIN::new(contract_address, client.clone());\r\n \r\n     // 1. Deposit ETH\r\n     let mint_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n"
                },
                {
                    "date": 1733315042727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     let wallet = wallet.with_chain_id(chain_id);\r\n     let client = Arc::new(SignerMiddleware::new(provider, wallet));\r\n \r\n     // Address of the deployed SwapPool contract\r\n-    let contract_address: Address = \"0x7ac7d8344c7efc596aaebefd3047bb05bf5f73892374cee07492885fe6f02673\".parse()?;\r\n+    let contract_address: Address = \"0x2afd9dbb6363f0fdf44b43c28f38ef5e42a556eb\".parse()?;\r\n     let moocoin = MOOCOIN::new(contract_address, client.clone());\r\n \r\n     // 1. Deposit ETH\r\n     let mint_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n"
                }
            ],
            "date": 1733311385830,
            "name": "Commit-0",
            "content": "use ethers::prelude::*;\r\nuse std::convert::TryFrom;\r\nuse std::sync::Arc;\r\n// // use dotenv::dotenv;\r\n\r\nabigen!(\r\n    SwapPool,\r\n    \"./src/abi/SwapPool.json\" // Path to the ABI file\r\n);\r\n\r\n#[tokio::main]\r\nasync fn main() -> eyre::Result<()> {\r\n\r\n    // Set up the provider and wallet\r\n    let provider = Provider::<Http>::try_from(\"http://127.0.0.1:8545\")?;\r\n    let wallet: LocalWallet = \"0x370b655fbd7677d37190504eb3231a976adf2bc6e229b7b8fdf8d2339bf0bd63\".parse()?;\r\n    let chain_id = 1337u64; // Set to your local test network's chain ID (e.g., 1337 for Ganache)\r\n    let wallet = wallet.with_chain_id(chain_id);\r\n    let client = Arc::new(SignerMiddleware::new(provider, wallet));\r\n\r\n    // Address of the deployed SwapPool contract\r\n    let contract_address: Address = \"0x2afd9dbb6363f0fdf44b43c28f38ef5e42a556eb\".parse()?;\r\n    let swap_pool = SwapPool::new(contract_address, client.clone());\r\n\r\n    // 1. Deposit ETH\r\n    let deposit_amount = U256::from(1_000_000_000_000_000_000u64); // 1 ETH in Wei\r\n    let binding = swap_pool\r\n        .deposit()\r\n        .value(deposit_amount);\r\n    let tx = binding\r\n        .send()\r\n        .await?;\r\n    println!(\"Deposit transaction hash: {:?}\", tx.tx_hash());\r\n\r\n    // 2. Swap balances\r\n    let recipient: Address = \"0x83b0b2Db521f68217D3A4ee04e3492c8D9cA239A\".parse()?;\r\n    let swap_amount = U256::from(500_000_000_000_000_000u64); // 0.5 ETH in Wei\r\n    let binding = swap_pool\r\n        .swap(recipient, swap_amount);\r\n    let tx = binding\r\n        .send()\r\n        .await?;\r\n    println!(\"Swap transaction hash: {:?}\", tx.tx_hash());\r\n\r\n    // 3. Withdraw ETH\r\n    let withdraw_amount = U256::from(500_000_000_000_000_000u64); // 0.5 ETH in Wei\r\n    let binding = swap_pool\r\n        .withdraw(withdraw_amount);\r\n    let tx = binding\r\n        .send()\r\n        .await?;\r\n    println!(\"Withdraw transaction hash: {:?}\", tx.tx_hash());\r\n\r\n    Ok(())\r\n}\r\n"
        }
    ]
}