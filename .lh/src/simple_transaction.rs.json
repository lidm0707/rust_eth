{
    "sourceFile": "src/simple_transaction.rs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1732453136632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732453143007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-use ethers::prelude::{};\n+use ethers::prelude::{Address,LocalWallet,};\n use std::convert::TryFrom;\n \n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n"
                },
                {
                    "date": 1732453149595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-use ethers::prelude::{Address,LocalWallet,};\n+use ethers::prelude::{Address,LocalWallet,Middleware,Provider};\n use std::convert::TryFrom;\n \n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n"
                },
                {
                    "date": 1732453155071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-use ethers::prelude::{Address,LocalWallet,Middleware,Provider};\n+use ethers::prelude::{Address,LocalWallet,Middleware,Provider,Sig};\n use std::convert::TryFrom;\n \n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n"
                },
                {
                    "date": 1732453160872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-use ethers::prelude::{Address,LocalWallet,Middleware,Provider,Sig};\n+use ethers::prelude::{Address,LocalWallet,Middleware,Provider,Signer,Trac};\n use std::convert::TryFrom;\n \n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n"
                },
                {
                    "date": 1732453168084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-use ethers::prelude::{Address,LocalWallet,Middleware,Provider,Signer,Trac};\n+use ethers::prelude::{Address,LocalWallet,Middleware,Provider,Signer,Transaction.};\n use std::convert::TryFrom;\n \n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n"
                },
                {
                    "date": 1732453178852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-use ethers::prelude::{Address,LocalWallet,Middleware,Provider,Signer,Transaction.};\n+use ethers::prelude::{Address,LocalWallet,Middleware,Provider,Signer,TransactionRequest,};\n use std::convert::TryFrom;\n \n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n"
                },
                {
                    "date": 1732453265805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n-use ethers::prelude::{Address,LocalWallet,Middleware,Provider,Signer,TransactionRequest,};\n+use ethers::prelude::{\n+    Address, LocalWallet, Middleware, Provider, Signer, TransactionRequest, U256,\n+};\n use std::convert::TryFrom;\n \n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n"
                },
                {
                    "date": 1732453275656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n use ethers::prelude::{\n     Address, LocalWallet, Middleware, Provider, Signer, TransactionRequest, U256,\n-};\n+}, U;\n use std::convert::TryFrom;\n \n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n"
                },
                {
                    "date": 1732453285390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n use ethers::prelude::{\n     Address, LocalWallet, Middleware, Provider, Signer, TransactionRequest, U256,\n-}, U;\n+}, utils::Ganache;\n use std::convert::TryFrom;\n \n+\n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n     // Connect to the Ganache RPC server\n     let ganache_endpoint = \"http://127.0.0.1:8545\";\n"
                },
                {
                    "date": 1732453327144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-use ethers::prelude::{\n+use ethers::{prelude::{\n     Address, LocalWallet, Middleware, Provider, Signer, TransactionRequest, U256,\n }, utils::Ganache;\n use std::convert::TryFrom;\n \n"
                },
                {
                    "date": 1732453336939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n-use ethers::{prelude::{\n-    Address, LocalWallet, Middleware, Provider, Signer, TransactionRequest, U256,\n-}, utils::Ganache;\n+use ethers::{\n+    prelude::{Address, LocalWallet, Middleware, Provider, Signer, TransactionRequest, U256},\n+    utils::Ganache,\n+};\n+use \n use std::convert::TryFrom;\n \n-\n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n     // Connect to the Ganache RPC server\n     let ganache_endpoint = \"http://127.0.0.1:8545\";\n"
                },
                {
                    "date": 1732453342245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n use ethers::{\n     prelude::{Address, LocalWallet, Middleware, Provider, Signer, TransactionRequest, U256},\n     utils::Ganache,\n };\n-use \n+use eyre::{}\n use std::convert::TryFrom;\n \n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n"
                },
                {
                    "date": 1732453349173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n use ethers::{\n     prelude::{Address, LocalWallet, Middleware, Provider, Signer, TransactionRequest, U256},\n     utils::Ganache,\n };\n-use eyre::{}\n+use eyre::{ContextCompat,Re}\n use std::convert::TryFrom;\n \n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n"
                },
                {
                    "date": 1732453355096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n use ethers::{\n     prelude::{Address, LocalWallet, Middleware, Provider, Signer, TransactionRequest, U256},\n     utils::Ganache,\n };\n-use eyre::{ContextCompat,Re}\n+use eyre::{ContextCompat,Result};\n+use \n use std::convert::TryFrom;\n \n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n"
                },
                {
                    "date": 1732453361406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     prelude::{Address, LocalWallet, Middleware, Provider, Signer, TransactionRequest, U256},\n     utils::Ganache,\n };\n use eyre::{ContextCompat,Result};\n-use \n+use hex::ToHex\n use std::convert::TryFrom;\n \n #[tokio::main]\n async fn main() -> Result<(), Box<dyn std::error::Error>> {\n"
                },
                {
                    "date": 1732453378747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,13 @@\n     prelude::{Address, LocalWallet, Middleware, Provider, Signer, TransactionRequest, U256},\n     utils::Ganache,\n };\n use eyre::{ContextCompat,Result};\n-use hex::ToHex\n+use hex::ToHex;\n use std::convert::TryFrom;\n \n #[tokio::main]\n-async fn main() -> Result<(), Box<dyn std::error::Error>> {\n+async fn main() -> Result<()> {\n     // Connect to the Ganache RPC server\n     let ganache_endpoint = \"http://127.0.0.1:8545\";\n     let provider = Provider::<Http>::try_from(ganache_endpoint)?;\n \n"
                },
                {
                    "date": 1732453389736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,24 +9,7 @@\n #[tokio::main]\n async fn main() -> Result<()> {\n     // Connect to the Ganache RPC server\n     let ganache_endpoint = \"http://127.0.0.1:8545\";\n-    let provider = Provider::<Http>::try_from(ganache_endpoint)?;\n-\n-    // Print the chain ID to confirm connection\n-    let chain_id = provider.get_chainid().await?;\n-    println!(\"Connected to chain ID: {}\", chain_id);\n-\n-    // Use the first account's private key from Ganache\n-    let private_key = \"0x3a1d16618a9663fd423c2cf8baec185b7da124d13ae9a56d2ec5f53cdd961b99\";\n-    let wallet: LocalWallet = private_key.parse()?;\n-\n-    // Display the wallet address\n-    let address = wallet.address();\n-    println!(\"Wallet address: {:?}\", address);\n-\n-    // Query balance for the wallet\n-    let balance = provider.get_balance(address, None).await?;\n-    println!(\"ETH Balance: {}\", ethers::utils::format_units(balance, 18)?);\n-\n+    \n     Ok(())\n }\n"
                },
                {
                    "date": 1732453397028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,8 @@\n \n #[tokio::main]\n async fn main() -> Result<()> {\n     // Connect to the Ganache RPC server\n-    let ganache_endpoint = \"http://127.0.0.1:8545\";\n-    \n+    let \n+\n     Ok(())\n }\n"
                },
                {
                    "date": 1732453403252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,8 @@\n \n #[tokio::main]\n async fn main() -> Result<()> {\n     // Connect to the Ganache RPC server\n-    let \n+    let mnemo\n \n     Ok(())\n }\n"
                },
                {
                    "date": 1732453408537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,8 @@\n \n #[tokio::main]\n async fn main() -> Result<()> {\n     // Connect to the Ganache RPC server\n-    let mnemonic = \"\"\n+    let mnemonic = \"gas \"\n \n     Ok(())\n }\n"
                },
                {
                    "date": 1732453595242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,18 @@\n+use ethers::{\n+    middleware::gas_oracle::GasCategory, prelude::{Address, LocalWallet, Middleware, Provider, Signer, TransactionRequest, U256}, signers::Wallet, utils::Ganache\n+};\n+use eyre::{ContextCompat,Result};\n+use hex::ToHex;\n+use std::convert::TryFrom;\n+\n+#[tokio::main]\n+async fn main() -> Result<()> {\n+    // Connect to the Ganache RPC server\n+    let mnemonic = \"gas monster ski craft below illegal discover limit dog bundle bus artefact\";\n+    let ganache = Ganache::new().mnemonic(mnemonic).spawn();\n+    println!(\"HTTP Endpoint: {}\",ganache.endpoint());\n+    let wallet: LocalWallet = ganache.keys()[0].into();\n+    \n+\n+    Ok(())\n+}\n"
                }
            ],
            "date": 1732453136632,
            "name": "Commit-0",
            "content": "use ethers::prelude::{};\nuse std::convert::TryFrom;\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n    // Connect to the Ganache RPC server\n    let ganache_endpoint = \"http://127.0.0.1:8545\";\n    let provider = Provider::<Http>::try_from(ganache_endpoint)?;\n\n    // Print the chain ID to confirm connection\n    let chain_id = provider.get_chainid().await?;\n    println!(\"Connected to chain ID: {}\", chain_id);\n\n    // Use the first account's private key from Ganache\n    let private_key = \"0x3a1d16618a9663fd423c2cf8baec185b7da124d13ae9a56d2ec5f53cdd961b99\";\n    let wallet: LocalWallet = private_key.parse()?;\n\n    // Display the wallet address\n    let address = wallet.address();\n    println!(\"Wallet address: {:?}\", address);\n\n    // Query balance for the wallet\n    let balance = provider.get_balance(address, None).await?;\n    println!(\"ETH Balance: {}\", ethers::utils::format_units(balance, 18)?);\n\n    Ok(())\n}\n"
        }
    ]
}